parameters:
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
        
    #app.menu_builder:
     #   class: App\Menu\MenuBuilder
     #   arguments: ["@knp_menu.factory","@security.authorization_checker","@security.token_storage"]
     #   tags:
     #       - { name: knp_menu.menu_builder, method: createMainMenu, alias: main }
     #       - { name: knp_menu.menu_builder, method: createUtilisateurMenu, alias: utilisateur }
     #       - { name: knp_menu.menu_builder, method: createSecretariatMenu, alias: secretariat }
     #       - { name: knp_menu.menu_builder, method: createJuryMenu, alias: jury }
            
    app.configure_menu_listener:
        class: App\EventListener\ConfigureMenuListener
        tags:
          - { name: kernel.event_listener, event: app.menu_configure, method: onMenuConfigure }
     
    admin.cadeaux:
        class: App\Admin\CadeauxAdmin
        arguments: [~, App\Entity\Cadeaux, ~]
        tags: 
            - {name: sonata.admin, manager_type: orm, group: Jury, label: Cadeaux}
        public: true
                
    admin.classement:
        class: App\Admin\ClassementAdmin
        arguments: [~, App\Entity\Classement, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Jury, label: Classement }
        public: true   
               
    admin.eleves:
        class: App\Admin\ElevesAdmin
        arguments: [~, App\Entity\Eleves, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Jury, label: Eleves }
        public: true 
     
    admin.equipes:
        class: App\Admin\EquipesAdmin
        arguments: [~, App\Entity\Equipes, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Jury, label: Equipes }
        public: true
        
    admin.jures:
        class: App\Admin\JuresAdmin
        arguments: [~, App\Entity\Jures, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Jury, label: Jures }
        public: true 
    
    admin.notes:
        class: App\Admin\NotesAdmin
        arguments: [~, App\Entity\Notes, ~]
        tags : 
            - {name: sonata.admin, manager_type: orm, group: Jury, label: Notes }
        public: true
    
    admin.prix:
        class: App\Admin\PrixAdmin
        arguments: [~, App\Entity\Prix, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Jury, label: Prix }
        public: true   
        
    admin.visites:
        class: App\Admin\VisitesAdmin
        arguments: [~, App\Entity\Visites, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Jury, label: Visites }
        public: true 
        
        #utilisateur.menu:
    #    class: App\Menu
     #   factory: ['App\Menu\MenuBuilder','createUtilisateurMenu']
     #   arguments: ["@security.context"]
      #  tags:
      #      - { name: menu.menu, alias: utilisateur }
            
    nouveluser.mail:
        class: App\NouvelUser\EnvoiMails

    nouveluser.listener:
        class: App\NouvelUser\InscritListener
        arguments: 
            - "@nouveluser.mail"
        tags:
            - { name: kernel.event_subscriber }